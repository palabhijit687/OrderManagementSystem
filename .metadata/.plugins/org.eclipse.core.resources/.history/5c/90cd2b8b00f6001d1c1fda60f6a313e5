package com.abhijit.order.controller;

import java.time.LocalDateTime;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.abhijit.order.entities.ItemMaster;
import com.abhijit.order.entities.OrderMaster;
import com.abhijit.order.entities.OrderMasterDetails;
import com.abhijit.order.entities.OrderRequest;
import com.abhijit.order.entities.OrderRequest.OrderItemRequest;
import com.abhijit.order.entities.UserMaster;
import com.abhijit.order.repository.ItemRepository;
import com.abhijit.order.repository.OrderMasterDetailsRepository;
import com.abhijit.order.repository.OrderMasterRepository;
import com.abhijit.order.repository.UserRepository;

@RestController
@RequestMapping("/api")
public class OrderController {
	
	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	private ItemRepository itemRepository;
	
	@Autowired
	private OrderMasterRepository orderMasterRepository;
	
	@Autowired
	private OrderMasterDetailsRepository orderMasterDetailsRepository;
	
	@PostMapping("/saveOrder")
	public ResponseEntity<String> saveOrder(@RequestBody OrderRequest orderRequest) {
    try {
    	Integer userId = Integer.parseInt(orderRequest.getUserId());
    	UserMaster user = userRepository.findElementById(userId);
    	OrderMaster orderMaster = new OrderMaster();
    	orderMaster.setUser(user);
    	orderMaster.setOrderDate(LocalDateTime.now());
    	orderMaster.setTotalAmount(orderRequest.getTotalAmount());
    	System.out.println(user.getEmail());
    	System.out.println(LocalDateTime.now());
    	System.out.println(orderRequest.getTotalAmount());
    	
    	orderMasterRepository.save(orderMaster);
    	
    	for(OrderItemRequest item:orderRequest.getOrderItems()) {
    		Long itemId = item.getItemId();
    		ItemMaster itemMaster = itemRepository.findByItemId(itemId);
    		OrderMasterDetails orderMasterDetails = new OrderMasterDetails();
    		orderMasterDetails.setOrder(orderMaster);
    		orderMasterDetails.setItem(itemMaster);
    		orderMasterDetails.setQuantity(item.getQuantity());
    		orderMasterDetails.setAmount(item.getAmount());
    		
    		orderMasterDetailsRepository.save(orderMasterDetails);
    	}
    	return ResponseEntity.ok("order saved successfully!");
    	
    } catch (NumberFormatException e) {
    	return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Invalid user id format");
    } catch (Exception e) {
    	return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Failed to save order");
    }
  }
}